name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake g++ gcc clang libx11-dev libgl-dev libasound2-dev libpulse-dev
        # Install Raylib and FTXUI from source or package managers as needed
        sudo apt-get install -y raylib-dev
        # Assuming you have a setup script for FTXUI or use vcpkg
        git clone https://github.com/ArthurSonzogni/FTXUI.git
        cd FTXUI
        mkdir build && cd build
        cmake .. -DFTXUI_BUILD_EXAMPLES=OFF -DFTXUI_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=/usr
        make -j$(nproc)
        sudo make install

    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y
        # Install necessary libraries like Raylib and FTXUI using vcpkg or other methods
        git clone https://github.com/microsoft/vcpkg.git
        ./vcpkg/bootstrap-vcpkg.bat
        ./vcpkg/vcpkg install raylib ftxui

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
          -S .
        echo "Configured CMake"

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}
    
    - name: Test
      working-directory: build
      run: ctest --output-on-failure --build-config ${{ matrix.build_type }}
